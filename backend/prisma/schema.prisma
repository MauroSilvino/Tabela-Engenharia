generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["debian-openssl-1.1.x", "native"]
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  cellphone String
  password  String
  createdAt DateTime @default(now())

  address  Address?
  projects Project[]
  tokens   UserToken[]

  @@map("users")
}

model Address {
  id            Int    @id @default(autoincrement())
  street        String
  number        String
  city          String
  neighboorhood String
  state         String
  country       String
  userId        Int    @unique

  user User @relation(fields: [userId], references: [id])

  @@map("addresses")
}

model Project {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  value     Float
  authorId  Int
  createdAt DateTime @default(now())

  author User   @relation(fields: [authorId], references: [id])
  items  Item[]

  @@map("projects")
}

model Item {
  id          String  @id @default(uuid())
  description String? @db.VarChar(5000)
  value       Float?
  quantity    Float?
  unity       String?
  projectId   Int?
  categoryId  Int

  category Category @relation(fields: [categoryId], references: [id])
  project  Project? @relation(fields: [projectId], references: [id])

  @@fulltext([description])
  @@map("items")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(5000)

  items Item[]

  @@fulltext([name])
  @@map("categories")
}

model UserToken {
  id          Int      @id @default(autoincrement())
  token       String
  userId      Int
  expiresDate DateTime
  createdAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  @@map("users_tokens")
}
